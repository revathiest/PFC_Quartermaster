// models/vehicleDetail.js
const { DataTypes } = require('sequelize');

module.exports = (sequelize) => {
  const VehicleDetail = sequelize.define('VehicleDetail', {
    uuid: {
      type: DataTypes.STRING,
      primaryKey: true,
      allowNull: false,
    },
    name: DataTypes.STRING,
    slug: DataTypes.STRING,
    class_name: DataTypes.STRING,
    length: DataTypes.FLOAT,
    beam: DataTypes.FLOAT,
    height: DataTypes.FLOAT,
    ir: DataTypes.FLOAT,
    em_idle: DataTypes.FLOAT,
    em_max: DataTypes.FLOAT,
    mass: DataTypes.FLOAT,
    cargo_capacity: DataTypes.FLOAT,
    vehicle_inventory: DataTypes.FLOAT,
    personal_inventory: DataTypes.FLOAT,
    crew_min: DataTypes.INTEGER,
    crew_max: DataTypes.INTEGER,
    crew_weapon: DataTypes.INTEGER,
    crew_operation: DataTypes.INTEGER,
    health: DataTypes.FLOAT,
    shield_hp: DataTypes.FLOAT,
    speed_scm: DataTypes.FLOAT,
    speed_max: DataTypes.FLOAT,
    zero_to_scm: DataTypes.FLOAT,
    zero_to_max: DataTypes.FLOAT,
    scm_to_zero: DataTypes.FLOAT,
    max_to_zero: DataTypes.FLOAT,
    fuel_capacity: DataTypes.FLOAT,
    intake_rate: DataTypes.FLOAT,
    fuel_usage_main: DataTypes.FLOAT,
    fuel_usage_maneuvering: DataTypes.FLOAT,
    fuel_usage_retro: DataTypes.FLOAT,
    fuel_usage_vtol: DataTypes.FLOAT,
    quantum_speed: DataTypes.BIGINT,
    quantum_spool_time: DataTypes.FLOAT,
    quantum_fuel_capacity: DataTypes.FLOAT,
    quantum_range: DataTypes.FLOAT,
    agility_pitch: DataTypes.FLOAT,
    agility_yaw: DataTypes.FLOAT,
    agility_roll: DataTypes.FLOAT,
    accel_main: DataTypes.FLOAT,
    accel_retro: DataTypes.FLOAT,
    accel_vtol: DataTypes.FLOAT,
    accel_maneuvering: DataTypes.FLOAT,
    accel_main_g: DataTypes.FLOAT,
    accel_retro_g: DataTypes.FLOAT,
    accel_vtol_g: DataTypes.FLOAT,
    accel_maneuvering_g: DataTypes.FLOAT,
    armor_ir: DataTypes.FLOAT,
    armor_em: DataTypes.FLOAT,
    armor_cross_section: DataTypes.FLOAT,
    armor_damage_physical: DataTypes.FLOAT,
    armor_damage_energy: DataTypes.FLOAT,
    armor_damage_distortion: DataTypes.FLOAT,
    armor_damage_thermal: DataTypes.FLOAT,
    armor_damage_biochemical: DataTypes.FLOAT,
    armor_damage_stun: DataTypes.FLOAT,
    focus: DataTypes.STRING,
    type: DataTypes.STRING,
    description: DataTypes.TEXT,
    size_class: DataTypes.INTEGER,
    manufacturer_name: DataTypes.STRING,
    manufacturer_code: DataTypes.STRING,
    insurance_claim_time: DataTypes.FLOAT,
    insurance_expedite_time: DataTypes.FLOAT,
    insurance_expedite_cost: DataTypes.FLOAT,
    updated_at: DataTypes.DATE,
    version: DataTypes.STRING,
    production_status: DataTypes.STRING,
    production_note: DataTypes.STRING,
    size: DataTypes.STRING,
    msrp: DataTypes.FLOAT,
    pledge_url: DataTypes.STRING(500),
  }, {
    charset: 'utf8mb4',
    collate: 'utf8mb4_unicode_ci',
  });

  return VehicleDetail;
};
