const { formatVerifiedNickname } = require('../formatVerifiedNickname');

const testCases = [
  { displayName: 'RevAthiest ‚õî', verified: true, tag: 'PFCS', expected: '[PFCS] RevAthiest' },
  { displayName: 'RevAthiest üîí ‚ö†Ô∏è ‚õî', verified: true, tag: 'PFCS', expected: '[PFCS] RevAthiest' },
  { displayName: '[PFCS] RevAthiest ‚õî', verified: true, tag: 'PFCS', expected: '[PFCS] RevAthiest' },
  { displayName: 'RevAthiest', verified: true, tag: 'PFCS', expected: '[PFCS] RevAthiest' },
  { displayName: 'RevAthiest', verified: false, tag: 'PFCS', expected: '[PFCS] RevAthiest ‚õî' },
  { displayName: 'RevAthiest', verified: false, tag: null, expected: 'RevAthiest ‚õî' },
  { displayName: 'RevAthiest ‚õî', verified: false, tag: null, expected: 'RevAthiest ‚õî' },
  { displayName: 'RevAthiest üîí ‚ö†Ô∏è ‚õî', verified: false, tag: null, expected: 'RevAthiest ‚õî' },
  { displayName: '[OLD] RevAthiest ‚ö†', verified: false, tag: 'PFCS', expected: '[PFCS] RevAthiest ‚õî' },
  { displayName: 'SuperLongNameThatExceedsThirtyTwoChars ‚õî', verified: false, tag: null, expected: 'SuperLongNameThatExceedsThirty ‚õî' },
  { displayName: '‚úÖ RevAthiest ‚õî', verified: true, tag: 'PFCS', expected: '[PFCS] ‚úÖ RevAthiest' },
  { displayName: '[PFCS] ‚úÖ RevAthiest ‚ö†Ô∏è', verified: true, tag: 'PFCS', expected: '[PFCS] ‚úÖ RevAthiest' },
];

function runNicknameTests() {
  console.log('=== Running Nickname Formatter Tests ===');
  testCases.forEach((test, index) => {
    const output = formatVerifiedNickname(test.displayName, test.verified, test.tag);
    const pass = output === test.expected;

    console.log(`\n[TEST ${index + 1}]`);
    console.log(`Input: displayName="${test.displayName}", verified=${test.verified}, tag=${test.tag}`);
    console.log(`Expected: "${test.expected}"`);
    console.log(`Got     : "${output}"`);
    console.log(pass ? '‚úÖ PASS' : '‚ùå FAIL');
  });
  console.log('=== Tests Completed ===');
}

runNicknameTests();